{"version":3,"sources":["index.module.css","components/ContactListItem/contactListItem.module.css","components/Filter/filter.module.css","components/ContactForm/contactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","target","setState","value","handleSubmit","preventDefault","addContact","props","this","onSubmit","className","styles","contactForm","htmlFor","type","contactInput","placeholder","onChange","label","btn","Component","ContactListItem","id","handleRemove","contactListItem","onClick","btnRemove","ContactList","visibleContacts","length","map","uuid","Filter","filter","inputFilter","defaultProps","App","contacts","contact","oldContactName","find","oldContactNumber","alert","prevState","item","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filterStr","toLowerCase","includes","getFilteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7489927a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__12MZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__1luOg\",\"btnRemove\":\"contactListItem_btnRemove__oVHF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"filter_inputFilter__UnLCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__2leNd\",\"contactInput\":\"contactForm_contactInput__2jPQs\",\"btn\":\"contactForm_btn__1YAmF\"};","import React, { Component } from 'react';\nimport styles from './contactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n    addContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\n        <label htmlFor=\"name\">\n          Name\n          <br />\n          <input\n            name=\"name\"\n            type=\"text\"\n            className={styles.contactInput}\n            placeholder=\"insert a name\"\n            onChange={this.handleChange}\n            value={name}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"number\" className={styles.label}>\n          Number\n          <br />\n          <input\n            name=\"number\"\n            type=\"text\"\n            className={styles.contactInput}\n            placeholder=\"insert a number\"\n            onChange={this.handleChange}\n            value={number}\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './contactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, handleRemove }) => {\n  return (\n    <li className={styles.contactListItem}>\n      <span>{name}</span>\n      <span>{number}</span>\n      <button onClick={() => handleRemove(id)} className={styles.btnRemove}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { uuid } from 'uuidv4';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({ visibleContacts, handleRemove }) => {\n  if (!visibleContacts.length) {\n    return <p>Phonebook is empty!</p>;\n  }\n  return (\n    <ul>\n      {visibleContacts.map(({ id = uuid(), name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          handleRemove={handleRemove}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.array.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './filter.module.css';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={styles.inputFilter}\n        name=\"filter\"\n        type=\"text\"\n        placeholder=\"search contact\"\n        onChange={handleChange}\n        value={filter}\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { uuid } from 'uuidv4';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter/';\nimport styles from './index.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    const oldContactName = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n\n    const oldContactNumber = this.state.contacts.find(\n      contact => contact.number === number,\n    );\n\n    if (oldContactName) {\n      alert(\n        `This contact NAME already exists as Name:${oldContactName.name} Tel:${oldContactName.number}`,\n      );\n      return;\n    } else if (oldContactNumber) {\n      alert(\n        `This contact NUMBER already exists as  Tel:${oldContactNumber.number} Name:${oldContactNumber.name}`,\n      );\n      return;\n    } else if (!name.length) {\n      alert('Please, enter the contact name');\n    } else if (!number.length) {\n      alert('Please, enter the contact number');\n    } else {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  handleRemove = id => {\n    this.setState(prevState => {\n      const contacts = prevState.contacts.filter(item => item.id !== id);\n      return {\n        contacts,\n      };\n    });\n  };\n\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  getFilteredContacts(contacts, filterStr) {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterStr.toLowerCase()),\n    );\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getFilteredContacts(contacts, filter);\n\n    return (\n      <>\n        <div className={styles.container}>\n          <h1>Phonebook</h1>\n          <ContactForm addContact={this.addContact} />\n          <hr></hr>\n          <h2>Contacts</h2>\n          <Filter filter={this.state.filter} handleChange={this.handleChange} />\n          <ContactList\n            visibleContacts={visibleContacts}\n            handleRemove={this.handleRemove}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}